Module path:  Environments.CartPole CartPole
Dynamically loaded from:  <class 'Environments.CartPole.CartPole'>
Module path:  Src.Algorithms.ProOLS ProOLS
Dynamically loaded from:  <class 'Src.Algorithms.ProOLS.ProOLS'>
=====Configurations=====
 Namespace(NN_basis_dim='32', Policy_basis_dim='32', actor_lr=0.01, algo_name='ProOLS', base=0, batch_size=32, buffer_size=1000, debug=True, delta=5, entropy_lambda=0.1, env_name='CartPole', experiment='Test_runfolder', extrapolator_basis='Fourier', folder_suffix='Default', fourier_coupled=True, fourier_k=7, fourier_order=-1, gamma=0.99, gauss_std=1.5, gpu=0, hyper='default', importance_clip=10.0, inc=1, log_output='term_file', max_episodes=100, max_inner=150, max_steps=30000, optim='rmsprop', oracle=-1000, raw_basis=True, restore=False, save_count=10, save_model=True, seed=2, speed=2, state_lr=0.001, summary=True, swarm=False, timestamp='1|17|9:45:59')
Actions space: 2 :: State space: 4
State features:  [('dummy_param', torch.Size([1]))]
Policy:  [('fc1.weight', torch.Size([2, 4])), ('fc1.bias', torch.Size([2]))]
0 :: Rewards 20.000 :: Rewards_per_eps 20.000 :: steps: 2.00 :: Time: 0.000(0.00025/step) :: Entropy : 0.000 :: Grads : [[], []]
tensor(-0.6589, grad_fn=<DivBackward0>)
